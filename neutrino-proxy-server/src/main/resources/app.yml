server:
  # 服务端web端口，用于支持HTTP接口，管理后台页面访问
  port: ${WEB_PORT:8888}
  context-path: /neutrino-proxy-server
solon:
  app:
    name: neutrino-proxy-server
    version: 2.0.1
  config:
    add: ./app.yml
# 日志级别
solon.logging.appender:
  console:
    pattern: "%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %magenta(${PID:-}) --- %-15([%15.15thread]) %-56(%cyan(%-40.40logger{39}%L)) : %msg%n"
  file:
    enable: true
    pattern: "%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level ${PID:-} --- %-15([%15.15thread]) %-56(%-40.40logger{39}%L) : %msg%n"
    name: "logs/${solon.app.name}"
    rolling: "logs/${solon.app.name}_%d{yyyy-MM-dd}_%i.log"
solon.logging.logger:
  "root":
    level: info

neutrino:
  proxy:
    protocol:
      max-frame-length: ${MAX_FRAME_LENGTH:2097152}
      length-field-offset: 0
      length-field-length: 4
      initial-bytes-to-strip: 0
      length-adjustment: 0
      read-idle-time: 120
      write-idle-time: 20
      all-idle-time-seconds: 0
    # 隧道相关配置-用于维持服务端与客户端的通信
    tunnel:
      # 线程池相关配置，用于技术调优，可忽略
      boss-thread-count: 2
      work-thread-count: 10
      # 隧道非SSL端口
      port: ${OPEN_PORT:9000}
      # 隧道SSL端口
      ssl-port: ${SSL_PORT:9002}
      # 隧道SSL证书配置
      key-store-password: ${STORE_PASS:123456}
      key-manager-password: ${MGR_PASS:123456}
      jks-path: ${JKS_PATH:classpath:/test.jks}
      # 是否开启隧道传输报文日志(日志级别为debug时开启才有效)
      transfer-log-enable: ${TUNNEL_LOG:false}
      # 是否开启心跳日志
      heartbeat-log-enable: ${HEARTBEAT_LOG:false}
    server:
      tcp:
        # 线程池相关配置，用于技术调优，可忽略
        boss-thread-count: 5
        work-thread-count: 20
        # http代理端口，默认80（不配置不支持）
        http-proxy-port: ${HTTP_PROXY_PORT:80}
        # https代理端口，默认443 （不配置不支持，同时需要配置域名、证书）
        https-proxy-port: ${HTTPS_PROXY_PORT:443}
        # 是否开启代理服务报文日志(日志级别为debug时开启才有效)
        transfer-log-enable: ${SERVER_LOG:false}
      udp:
        # 线程池相关配置，用于技术调优，可忽略
        boss-thread-count: 5
        work-thread-count: 20
        # 是否开启代理服务报文日志(日志级别为debug时开启才有效)
        transfer-log-enable: ${SERVER_LOG:false}
  data:
    db:
      # 数据库类型，目前支持h2、mysql、mariadb
      type: ${DB_TYPE:h2}
      # 数据库连接URL
      url: ${DB_URL:jdbc:h2:file:./data/db;MODE=MySQL;AUTO_SERVER=TRUE}
      # 数据库用户名
      username: ${DB_USER:}
      # 数据库密码
      password: ${DB_PASSWORD:}

#添加MIME印射（如果有需要？）
#是否启用静态文件服务。（可不配，默认为启用）
solon.staticfiles.enable: true
#静态文件的304缓存时长。（可不配，默认为10分钟）
solon.staticfiles.maxAge: 600
#添加静态目录映射。（按需选择）#v1.11.0 后支持
solon.staticfiles.mappings:
  - path: "/"
    repository: "./neutrino-proxy-admin/dist/" #2.添加资源路径（仓库只能是目录）

mybatis.db:
  typeAliases:    #支持包名 或 类名（大写开头 或 *）//支持 ** 或 * 占位符
    - "org.dromara.neutrinoproxy.server.dal.entity"
  mappers:        #支持包名 或 类名（大写开头 或 *）或 xml（.xml结尾）//支持 ** 或 * 占位符
    - "classpath:mapper/*.xml"
    - "org.dromara.neutrinoproxy.server.dal"
  configuration:   #扩展配置（要与 MybatisConfiguration 类的属性一一对应）
    cacheEnabled: false
    mapUnderscoreToCamelCase: true
  globalConfig:    #全局配置（要与 GlobalConfig 类的属性一一对应）
    banner: true
